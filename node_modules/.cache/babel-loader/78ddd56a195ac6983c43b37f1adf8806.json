{"ast":null,"code":"var _jsxFileName = \"/Users/nobuhirosuzuki/Documents/Studying/react/new_medicalc/src/components/parts/Example.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, memo, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  console.log(\"render App\");\n  const [count, setCount] = useState(0);\n  const handleClick = useCallback(() => {\n    console.log(\"memonized callback\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Counter: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"logging\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"1cB4ljO+WlCyM3OAm4ykdyUJXqU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nobuhirosuzuki/Documents/Studying/react/new_medicalc/src/components/parts/Example.jsx"],"names":["React","useState","memo","useCallback","App","console","log","count","setCount","handleClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,WAAhC,QAAmD,OAAnD;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMQ,WAAW,GAAGN,WAAW,CAAC,MAAM;AACpCE,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,sBACE;AAAA,4BACE;AAAA,8BAAaC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD;;GAfuBL,G;;KAAAA,G","sourcesContent":["import React, { useState, memo, useCallback } from \"react\";\n\nexport default function App() {\n  console.log(\"render App\");\n\n  const [count, setCount] = useState(0);\n  const handleClick = useCallback(() => {\n    console.log(\"memonized callback\");\n  }, []);\n\n  return (\n    <>\n      <p>Counter: {count}</p>\n      <button onClick={() => setCount(count + 1)}>Increment count</button>\n      <button onClick={handleClick}>logging</button>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}