{"ast":null,"code":"var _jsxFileName = \"/Users/nobuhirosuzuki/Documents/Studying/react/new_medicalc/src/components/parts/Example.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, memo } from \"react\"; // この関数コンポーネントでmemoを書かなかったら、count1の値が変化してもrenderingされてしまう。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Child = /*#__PURE__*/memo(_c = props => {\n  var i = 0;\n\n  while (i < 10000) i++;\n\n  console.log(\"render Child\");\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Child: \", props.count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Child;\nexport default function Example() {\n  _s();\n\n  console.log(\"render father\");\n  const [count1, setCount1] = useState(0);\n  const [count2, setCount2] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount1(count1 + 1),\n      children: \"countup father count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount2(count2 + 1),\n      children: \"countup chlid count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Child, {\n      count: count2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Example, \"Au8fyW5wzjHClKn3HRlUVv4pnjI=\");\n\n_c3 = Example;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Child$memo\");\n$RefreshReg$(_c2, \"Child\");\n$RefreshReg$(_c3, \"Example\");","map":{"version":3,"sources":["/Users/nobuhirosuzuki/Documents/Studying/react/new_medicalc/src/components/parts/Example.jsx"],"names":["React","useState","memo","Child","props","i","console","log","count","Example","count1","setCount1","count2","setCount2"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC,C,CAGA;;;;AACA,MAAMC,KAAK,gBAAGD,IAAI,MAACE,KAAK,IAAI;AAC1B,MAAIC,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAG,KAAX,EAAkBA,CAAC;;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,sBAAO;AAAA,0BAAYH,KAAK,CAACI,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALiB,CAAlB;MAAML,K;AAON,eAAe,SAASM,OAAT,GAAmB;AAAA;;AAChCH,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMU,SAAS,CAACD,MAAM,GAAG,CAAV,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMG,SAAS,CAACD,MAAM,GAAG,CAAV,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD;;GAbuBH,O;;MAAAA,O","sourcesContent":["import React, { useState, memo } from \"react\";\n\n\n// この関数コンポーネントでmemoを書かなかったら、count1の値が変化してもrenderingされてしまう。\nconst Child = memo(props => {\n  var i = 0;\n  while (i < 10000) i++;\n  console.log(\"render Child\");\n  return <p>Child: { props.count }</p>\n})\n\nexport default function Example() {\n  console.log(\"render father\");\n\n  const [count1, setCount1] = useState(0);\n  const [count2, setCount2] = useState(0);\n\n  return (\n    <>\n      <button onClick={() => setCount1(count1 + 1)}>countup father count</button>\n      <button onClick={() => setCount2(count2 + 1)}>countup chlid count</button>\n      <Child count={count2} />\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}